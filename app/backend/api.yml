openapi: 3.0.0
info:
  title: GPT-SysAdmin API
  description: API for the GPT-SysAdmin containerized application
  version: "1.0.0"
servers:
  - url: https://api.example.com/v1
paths:
  /tasks:
    post:
      summary: Add a new task
      operationId: createTask
      tags:
        - "Tasks"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskModel'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum: [pending, running, completed, error]

  /tasks/{taskId}/messages:
    post:
      summary: Send a message for a task
      operationId: sendMessage
      tags:
        - "Messages"
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The message sent by the user
      responses:
        201:
          description: Message sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
  /tasks/{taskId}:
    get:
      summary: Get task status and messages
      operationId: getTask
      tags:
        - "Tasks"
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Task found
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum: [pending, running, completed, error]
                  messages:
                    type: array
                    items:
                      type: string
  /hosts:
    post:
      summary: Add a new host
      operationId: createHost
      tags:
        - "Hosts"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostModel'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  host_id:
                    type: string
                    format: uuid


components:
  schemas:
    TaskModel:
      type: object
      properties:
        engine:
          type: string
          enum:
            - gpt-3.5-turbo
            - gpt-4
        taskDescription:
          type: string
        hostDescription:
          type: string
        host:
          type: string
          description: hostname or IPV4
        user:
          type: string
          description: defaults to root if not given
        supervised:
          type: boolean
      required:
        - taskDescription
        - hostDescription
        - host
        - supervised

    HostModel:
      type: object
      properties:
        host_id:
          type: string
        host_name:
          type: string
        ip:
          type: string
        username:
          type: string
        private_key:
          type: string
        public_key:
          type: string